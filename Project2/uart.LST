C51 COMPILER V6.02  UART                                                                   05/04/2016 15:58:39 PAGE 1   


C51 COMPILER V6.02, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\uart.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE .\uart.c DEBUG OBJECTEXTEND

stmt level    source

   1          /***********************************************************************
   2          MODULE:    UART
   3          VERSION:   1.03
   4          CONTAINS:  Routines for controlling the UART peripheral on the Philips
   5                     P89LPC932
   6          COPYRIGHT: Embedded Systems Academy, Inc. - www.esacademy.com
   7          LICENSE:   May be freely used in commercial and non-commercial code
   8                     without royalties provided this copyright notice remains
   9                     in this file and unaltered
  10          WARNING:   IF THIS FILE IS REGENERATED BY CODE ARCHITECT ANY CHANGES
  11                     MADE WILL BE LOST. WHERE POSSIBLE USE ONLY CODE ARCHITECT
  12                     TO CHANGE THE CONTENTS OF THIS FILE
  13          GENERATED: On "Jun 24 2003" at "10:17:56" by Code Architect 2.01
  14          ***********************************************************************/
  15          
  16          // SFR description needs to be included
  17          #include <reg932.h>
  18          #include "uart.h"
  19          
  20          // flag that indicates if the UART is busy transmitting or not
  21          static bit mtxbusy;
  22          
  23          /***********************************************************************
  24          DESC:    Initializes UART for mode 1
  25                   Baudrate: 9600
  26                   Uses Baud Rate Generator
  27          RETURNS: Nothing
  28          CAUTION: If interrupts are being used then EA must be set to 1
  29                   after calling this function
  30          ************************************************************************/
  31          void uart_init
  32            (
  33            void
  34            )
  35          {
  36   1        unsigned int BRG_Val;
  37   1        // configure UART
  38   1        // clear SMOD0 to access SM0 (UART mode bit) in SCON
  39   1        PCON &= ~0x40;
  40   1        // Set to UART mode 1 and enable reception
  41   1        // Also clears the RI and TI flags
  42   1        SCON = 0x50;
  43   1        // clear SMOD1
  44   1        PCON &= 0x7f;
  45   1        // set SMOD1 (not used)
  46   1        // PCON |= (1 << 8);
  47   1        // Clear any status flags and set for a combine RI/TI interrupt
  48   1        SSTAT = 0x00;
  49   1      
  50   1        // enable break detect
  51   1        AUXR1 |= 0x40;
  52   1      
  53   1        // configure baud rate generator
  54   1        BRG_Val=(unsigned int)(OSC_FREQ/300UL);
  55   1        BRG_Val=BRG_Val-16;
C51 COMPILER V6.02  UART                                                                   05/04/2016 15:58:39 PAGE 2   

  56   1        BRGCON = 0x00;
  57   1        BRGR1 = BRG_Val>>8;
  58   1        BRGR0 = (unsigned char)(BRG_Val&0xff);
  59   1        BRGCON = 0x03;
  60   1      
  61   1        // TxD = push-pull, RxD = input
  62   1        P1M1 &= ~0x01;
  63   1        P1M2 |= 0x01;
  64   1        P1M1 |= 0x02;
  65   1        P1M2 &= ~0x02;
  66   1      
  67   1        // initially not busy
  68   1        mtxbusy = 0;
  69   1      
  70   1        // set isr priority to 0
  71   1        IP0 &= 0xEF;
  72   1        IP0H &= 0xEF;
  73   1        // enable uart interrupt
  74   1        ES = 1;
  75   1      
  76   1      } // uart_init
  77          
  78          /***********************************************************************
  79          DESC:    UART Interrupt Service Routine
  80          RETURNS: Nothing
  81          CAUTION: uart_init must be called first
  82                   EA must be set to 1
  83          ************************************************************************/
  84          void uart_isr
  85            (
  86            void
  87            ) interrupt 4 using 1
  88          {
  89   1        if (RI)
  90   1        {
  91   2          // clear interrupt flag
  92   2          RI = 0;
  93   2        } // if
  94   1      
  95   1        if (TI)
  96   1        {
  97   2          // clear interrupt flag
  98   2          TI = 0;
  99   2          // no longer busy
 100   2          mtxbusy = 0;
 101   2        } // if
 102   1      
 103   1      } // uart_isr
 104          
 105          /***********************************************************************
 106          DESC:    Transmits a 8-bit value via the UART in the current mode
 107                   May result in a transmit interrupt if enabled.
 108          RETURNS: Nothing
 109          CAUTION: uart_init must be called first
 110          ************************************************************************/
 111          void uart_transmit
 112            (
 113            unsigned char value    // data to transmit
 114            )
 115          {
 116   1        while(mtxbusy);
 117   1        mtxbusy = 1;
C51 COMPILER V6.02  UART                                                                   05/04/2016 15:58:39 PAGE 3   

 118   1        SBUF = value;
 119   1      } // uart_transmit
 120          
 121          /***********************************************************************
 122          DESC:    Gets a received 8-bit value from the UART
 123          RETURNS: Received data
 124          CAUTION: uart_init must be called first
 125          ************************************************************************/
 126          unsigned char uart_get
 127            (
 128            void
 129            )
 130          {
 131   1        return SBUF;
 132   1      } // uart_get
 133          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     85    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
